// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load=1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out after the next time step.)
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Put your code here:
	DMux8Way(in = load , sel = address[6..8] , a = out0, b = out1 , c = out2 , d = out3 , e = out4 , f = out5 , g = out6 , h = out7);
	RAM64(in = in, load = out0 , address = address[0..5] , out = out8);
	RAM64(in = in, load = out1 , address = address[0..5] , out = out9);
	RAM64(in = in, load = out2 , address = address[0..5] , out = out10);
	RAM64(in = in, load = out3 , address = address[0..5] , out = out11);
	RAM64(in = in, load = out4 , address = address[0..5] , out = out12);
	RAM64(in = in, load = out5 , address = address[0..5] , out = out13);
	RAM64(in = in, load = out6 , address = address[0..5] , out = out14);
	RAM64(in = in, load = out7 , address = address[0..5] , out = out15);
	Mux8Way16(a = out8 , b = out9 , c = out10 , d = out11 , e = out12 , f = out13 , g = out14 , h = out15 , sel = address[6..8] , out = out);

}