// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load=1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out after the next time step.)
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // Put your code here:
	DMux4Way(in = load , sel = address[12..13] , a = out0, b = out1 , c = out2 , d = out3 );
	RAM4K(in = in, load = out0 , address = address[0..11] , out = out8);
	RAM4K(in = in, load = out1 , address = address[0..11] , out = out9);
	RAM4K(in = in, load = out2 , address = address[0..11] , out = out10);
	RAM4K(in = in, load = out3 , address = address[0..11] , out = out11);
	Mux4Way16(a = out8 , b = out9 , c = out10 , d = out11 , sel = address[12..13] , out = out);

}